using System.Collections;
using System.Collections.Generic;



public class ClientData
{
    public enum Phases { BattlePhase, DamagePhase, GameEndWin, GameEndLose, GameEndDraw }
    public class PlayerData
    {
        public CardData[] hand; //手札
        public int decknum;     //デッキの残り枚数
        public CardData[] used; //戦闘で使用したカード
        public CardData[] damage;  //ダメージとして捨てたカード
    }

    public Phases phase;
//    public Phases lastphase;  //直前のフェイズ

    public PlayerData myself;   //自分
    public PlayerData rival; //相手

    public int myselect;       //自分の選んだ手札の位置
    public int rivalselect; //相手の選んだ手札の位置

    public int mydraw;    //引いたカードの枚数（Handの後ろのカード）
    public int rivaldraw;

    public int damage;  //戦闘時のダメージ値
}


public class CardData
{
    public enum FiveElements
    {
        木,
        火,
        土,
        金,
        水
    }

    public FiveElements Element;
    public int Power;

    public CardData(FiveElements elementt,int power)
    {
        Element = elementt;
        Power = power;
    }


    public static int Judge(CardData a_battle, CardData b_battle, CardData a_support = null, CardData b_support = null)
    {
        int a_supportpower = (a_support != null ? Chemistry(a_battle.Element, a_support.Element) : 0);
        int a_power = a_battle.Power + a_supportpower + Chemistry(a_battle.Element, b_battle.Element);
        int b_supportpower = (b_support != null ? Chemistry(b_battle.Element, b_support.Element) : 0);
        int b_power = b_battle.Power + b_supportpower + Chemistry(b_battle.Element, a_battle.Element);

        return a_power - b_power;
    }

    public static readonly int[] table = new int[]{
            1, 0, 0,-1, 1,
            1, 1, 0, 0,-1,
           -1, 1, 1, 0, 0,
            0,-1, 1, 1, 0,
            0, 0,-1, 1, 1
        };
    public static int Chemistry(FiveElements dest, FiveElements src)
    {
        return table[((int)dest) * 5 + ((int)src)];
    }


}



